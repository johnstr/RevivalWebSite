@model RevivalWebSite.ViewModels.EditUserViewModel
@{
    ViewBag.Name = "Edit User";
    Layout = null;
}

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@ViewBag.Name</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm("EditUser", "Admin", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "editSuccess" }, new { @class = "form-horizontal", role = "form col" }))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m=>m.Id)
                    @for (var i = 0; i < Model.Roles.Count; i++)
                    {
                        @Html.HiddenFor(m => Model.Roles[i].Id)
                        @Html.HiddenFor(m => Model.Roles[i].Name)
                    }
                    <div class="form-group">
                        @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    @if (User.IsInRole("admin"))
                    {
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.Roles, "Id", "Name"), "Select Option", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RoleId, "", new { @class = "text-danger" })
                    </div>
                    }
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <input type="submit" value="Save Changes" class="btn btn-default" />
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



@Scripts.Render("~/bundles/jqueryval")


